{
    "openapi": "3.0.0",
    "info": {
      "title": "API Documentation",
      "version": "1.0.0",
      "description": "API documentation using Swagger UI"
    },
    "paths": {
      "/api/v1/auth": {
        "post": {
          "summary": "Generate a jwt token",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUser"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Token generated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/users": {
        "post": {
          "summary": "Create a new user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUser"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Get all users",
          "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number for pagination",
            "schema": {
              "type": "integer",
              "example": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The number of users to return per page",
            "schema": {
              "type": "integer",
              "example": 10,
              "minimum": 1
            }
          }
        ],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "A list of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
            "summary": "Update user information",
            "security": [
              {
                "BearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "fernando-updated2"
                      },
                      "email": {
                        "type": "string",
                        "example": "hdz.fernando8991@hotmail.com-updated2"
                      },
                      "id": {
                        "type": "string",
                        "example": "6762307e14afd91107693e93"
                      }
                    },
                    "required": ["name", "email", "id"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "User updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "message": {
                          "type": "string",
                          "example": "user updated successfully"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "6762307e14afd91107693e93"
                            },
                            "name": {
                              "type": "string",
                              "example": "fernando-updated"
                            },
                            "email": {
                              "type": "string",
                              "example": "hdz.fernando8991@hotmail.com-updated"
                            },
                            "password": {
                              "type": "string",
                              "example": "$2b$10$4zDDW.7OZsgzxcRgoEHW3OSTg8O1Po/lfAYkEjLnLc/aY5kTTFFQC"
                            },
                            "__v": {
                              "type": "integer",
                              "example": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Bad request, invalid data"
              },
              "401": {
                "description": "Unauthorized, invalid token"
              },
              "404": {
                "description": "User not found"
              },
              "500": {
                "description": "Internal server error"
              }
            }
          }
        
      },
     "/api/v1/users/user": {
      "get": {
        "summary": "Get a specific user by id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "The unique identifier of the user",
            "schema": {
              "type": "string",
              "example": "676269d3a507cdf3e78b057d"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The user details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
    },
    "components": {
      "schemas": {
        "PostUser": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john.doe@example.com"
            },
            "password": {
              "type": "string",
              "example": "securepassword"
            }
          },
          "required": ["name", "email", "password"]
        },
        "User": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "ferras"
            },
            "email": {
              "type": "string",
              "example": "ferras@example.com"
            },
            "password": {
              "type": "string",
              "example": "securepassword"
            }
          },
          "required": ["name", "email", "password"]
        },
        "AuthUser": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "user4@hotmail.com"
            },
            "password": {
              "type": "string",
              "example": "secretPassword"
            }
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
  